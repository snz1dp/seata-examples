###########################################################################################
# WEB服务配置
###########################################################################################
# 服务端口，开发请确保不要与其他服务端口冲突
server.port=${WEB_SERVER_PORT:80}
# 服务上下文根
server.context-path=${WEB_CONTEXT_PATH:/seatas/example/account}
# 服务对外上下文根或URL
server.publish.url=${WEB_PUBLISH_URL:${server.context-path}}
# 注销后默认跳转地址
server.logout-success.url=${WEB_LOGOUT_URL:${server.publish.url}/health}
# 应用名称
spring.application.name=seatas_example_account

###########################################################################################
# 监控检查配置项
###########################################################################################
# 不检查邮件
management.health.mail.enabled=false
# 不检查JMS 
management.health.jms.enabled=false
# 取消默认的安全管理
management.security.enabled=false

###########################################################################################
# 数据库配置
###########################################################################################
# 数据结构创建标识
spring.datascheme.name=${spring.application.name}
# 数据库SQL源地址
spring.datascheme.url=classpath:sql/
# 数据源连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# jdbc驱动类名
spring.datasource.driver-class-name=org.postgresql.Driver
# jdbc连接URL
spring.datasource.url=jdbc:postgresql://${PG_HOST:postgres}:${PG_PORT:5432}/${PG_DATABASE:seatas_example_account}
# jdbc用户名
spring.datasource.username=${PG_USER:postgres}
# jdbc密码
spring.datasource.password=${PG_PASSWORD:snz1dp9527}
# 是否把下划线转驼峰
mybatis-plus.configuration.map-underscore-to-camelcase=false

###########################################################################################
# 分布式事务配置
###########################################################################################
# 是否启用Seata分布式事务
seata.enabled=true
# 分布式事务服务分组后缀
seata.tx-service-group=seatas-examples-group
# 启用自动化数据源代理
seata.enable-auto-data-source-proxy=true
# 数据源代理模式：AT
seata.data-source-proxy-mode=AT
# 使用JDK代理替换CGLIB
seata.use-jdk-proxy=false
# 自动配置数据源排除列表
# seata.excludes-for-auto-proxying=firstClassNameForExclude,secondClassNameForExclude
# 配置为文件配置方式
seata.config.type=file
# 客户端资源管理器配置
seata.client.rm.async-commit-buffer-limit=1000
# 一阶段结果上报TC重试次数（默认5）
seata.client.rm.report-retry-count=5
# 自动刷新缓存中的表结构（默认false）
seata.client.rm.table-meta-check-enable=false
# 启用成果报告（默认为false）
seata.client.rm.report-success-enable=true
# 校验或占用全局锁重试间隔（默认10ms）
seata.client.rm.lock.retry-interval=10
# 校验或占用全局锁重试次数（默认30）
seata.client.rm.lock.retry-times=30
# 分支事务与其它全局回滚事务冲突时锁策略（优先释放本地锁让回滚成功）
seata.client.rm.lock.retry-policy-branch-rollback-on-conflict=true
# 一阶段全局提交结果上报TC重试次数（默认1次，建议大于1）
seata.client.tm.commit-retry-count=5
# 一阶段全局回滚结果上报TC重试次数（默认1次，建议大于1）
seata.client.tm.rollback-retry-count=5
# 二阶段回滚镜像校验（默认true开启）
seata.client.undo.data-validation=true
# undo序列化方式（默认jackson）
seata.client.undo.log-serialization=jackson
# 自定义undo表名（默认undo_log）
seata.client.undo.log-table=undo_log
# 日志异常输出概率（默认100）
seata.client.log.exception-rate=100
# TC 集群名称(seata.service.vgroup-mapping.<>)
seata.service.vgroup-mapping.seatas-examples-group=default
# TC 集群地址(seata.service.<group_name>.grouplist)
seata.service.default.grouplist=seatas:8091

###########################################################################################
# 应用配置信息
###########################################################################################
# 应用代码
app.code=${spring.application.name}
# 应用JWT调用安全令牌
app.jwt.token=${JWT_TOKEN:}
# 应用JWT私钥（RSA）
app.jwt.private_key=${JWT_PRIVKEY:}
# JWT存活时间
app.jwt.live_time=${JWT_LIVE:1800}

###########################################################################################
# 设置日志级
###########################################################################################
logging.level.root=${ROOT_LOG_LEVEL:INFO}
logging.level.com.snz1.seatas=${APP_LOG_LEVEL:INFO}
logging.level.io.seata=${APP_LOG_LEVEL:INFO}
